(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{459:function(t,s,n){t.exports=n.p+"assets/img/git01.2db3b0d7.png"},477:function(t,s,n){"use strict";n.r(s);var a=n(2),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("有许多还没有用过，当个笔记保存，第一篇文章熟悉一下md文档编写\n")]),t._v(" "),a("h2",{attrs:{id:"git-基本理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-基本理解"}},[t._v("#")]),t._v(" Git 基本理解")]),t._v(" "),a("p",[t._v("Git版本管理工具，有三大区域：")]),t._v(" "),a("ol",[a("li",[t._v("工作目录——存放项目代码的目录")]),t._v(" "),a("li",[t._v("暂存区——存放工作中更改的文件")]),t._v(" "),a("li",[t._v("代码仓库——当开发功能足够成为一个新版本时，提交到仓库，将暂存区中的代码复制一份存到代码仓库中\n"),a("img",{attrs:{src:n(459),alt:"git.jpg"}})])]),t._v(" "),a("h2",{attrs:{id:"git-常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-常用命令"}},[t._v("#")]),t._v(" git 常用命令")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置git用户名和密码")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"your name"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"your email"')]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看当前配置")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --list\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化git仓库")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init \n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看当前仓库状态")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将工作目录中的文件添加到暂存区")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" x.txt\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" a.txt b.txt\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",[t._v("如果有不想提交的文件夹或者文件，可以在项目下建立一个文件以"),a("code",[t._v(".gitignore")]),t._v("为后缀，写入不想提交的文件名即可。此时用git add .提交就是有选择的提交。")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将暂存区的代码提交到本地仓库，形成一个版本")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看本地仓库中历史提交版本")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将暂存区中文件删除")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" --cashed filename\n")])])]),a("div",{staticClass:"custom-block tip"},[a("ol",[a("li",[t._v("保证工作目录中的代码和暂存区一致")]),t._v(" "),a("li",[t._v("删除之后，工作目录任有此文件而暂存区没有，git将不做管理。")])])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 用暂存区中的文件覆盖工作目录中的文件")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout --filename\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回滚到本地仓库中特定版本并覆盖暂存区和工作目录")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard commitID\n")])])]),a("div",{staticClass:"custom-block tip"},[a("ol",[a("li",[t._v("commitID可以git log查看，全部复制或者只取前六位")]),t._v(" "),a("li",[t._v("如果回滚到版本1，版本2若存在则会被自动删除")])])]),t._v(" "),a("h2",{attrs:{id:"分支相关命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支相关命令"}},[t._v("#")]),t._v(" 分支相关命令")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看分支 *代表当前分支")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建分支")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch branchname\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换分支")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout branchname\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建并切换分支")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b branchname\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除分支")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -D branchname\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 合并分支 合并后来源分支任存在")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge branchname\n")])])]),a("h2",{attrs:{id:"github-相关命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github-相关命令"}},[t._v("#")]),t._v(" github 相关命令")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为远程仓库创建别名")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin git@github.com:"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("username"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/xxx.git\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看远程地址的详细信息")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote -v\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看当前别名对应的远程仓库地址")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote show origin\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从远程仓库获取代码（拉取所有版本到本地）")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone origin\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",[t._v("加入到已有项目开发，需要先拉取所有版本到本地再进行开发")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从远程仓库拉取最新版本代码 远程 本地")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin master\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 向远程仓库推送代码 git push <远程仓库> <本地分支名>:<远程分支名>")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master:master\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除当前别名对应的远程仓库地址，解除关联")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote remove origin\n\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",[a("strong",[t._v("1. clone 和 pull 之间有什么区别？")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);